{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\azahi\\\\Desktop\\\\Work\\\\Personal\\\\AnimeInfoApp_ReactNative\\\\src\\\\screen\\\\component\\\\upcomingAnime.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { withNavigation } from \"react-navigation\";\nimport jiken from \"../../api/jikan\";\nimport ResultsDetail from \"./resultDetails\";\nimport Loading from \"./loading\";\nvar UpcomingAnime = function UpcomingAnime(props) {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    upcomingAnimeList = _useState2[0],\n    setUpcomingAnimeList = _useState2[1];\n  var year = new Date().getFullYear();\n  console.log(upcomingAnimeList, \"upcomingAnimeList\");\n  var searchResults = function searchResults() {\n    var response;\n    return _regeneratorRuntime.async(function searchResults$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            if (!upcomingAnimeList) {\n              _context.next = 4;\n              break;\n            }\n            setUpcomingAnimeList();\n            return _context.abrupt(\"return\");\n          case 4:\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(jiken.get(\"/seasons/\" + year + \"/\" + props.season, {}));\n          case 6:\n            response = _context.sent;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(setUpcomingAnimeList(_toConsumableArray(response.data.data)));\n          case 9:\n            _context.next = 15;\n            break;\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            setErrorMsg(\"Data Not Found!\");\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(Pressable, {\n    style: styles.button,\n    onPress: function onPress() {\n      return searchResults();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \" \", React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Upcoming Anime \", year, \" - \", props.season)), upcomingAnimeList ? React.createElement(FlatList, {\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    data: upcomingAnimeList,\n    keyExtractor: function keyExtractor(r) {\n      return r.mal_id;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Details\", {\n            id: item.mal_id,\n            type: \"anime\"\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }, React.createElement(ResultsDetail, {\n        result: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }) : React.createElement(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginLeft: 15,\n    marginBottom: 5,\n    textTransform: \"capitalize\"\n  },\n  container: {\n    marginTop: 5,\n    borderBottomColor: \"black\",\n    paddingBottom: 10,\n    borderBottomWidth: 3\n  },\n  data: {\n    marginLeft: 15,\n    marginRight: 15,\n    marginTop: 10,\n    width: Dimensions.get(\"window\").width / 3 - 35\n  },\n  image: {\n    width: 100,\n    height: 170,\n    borderRadius: 4,\n    marginBottom: 6\n  },\n  name: {\n    fontWeight: \"bold\",\n    fontSize: 14,\n    marginBottom: 5\n  },\n  button: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 2,\n    marginLeft: 5,\n    marginRight: 5,\n    backgroundColor: \"white\",\n    borderWidth: 2,\n    paddingTop: 3\n  }\n});\nexport default withNavigation(UpcomingAnime);","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","FlatList","ScrollView","TouchableOpacity","Dimensions","Pressable","withNavigation","jiken","ResultsDetail","Loading","UpcomingAnime","props","_useState","_useState2","_slicedToArray","upcomingAnimeList","setUpcomingAnimeList","year","Date","getFullYear","console","log","searchResults","response","_regeneratorRuntime","async","searchResults$","_context","prev","next","abrupt","awrap","get","season","sent","_toConsumableArray","data","t0","setErrorMsg","stop","Promise","createElement","style","styles","container","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","button","onPress","title","horizontal","showsHorizontalScrollIndicator","keyExtractor","r","mal_id","renderItem","_ref","item","navigation","navigate","id","type","result","create","fontSize","fontWeight","marginLeft","marginBottom","textTransform","marginTop","borderBottomColor","paddingBottom","borderBottomWidth","marginRight","width","image","height","borderRadius","name","alignItems","justifyContent","backgroundColor","borderWidth","paddingTop"],"sources":["C:/Users/azahi/Desktop/Work/Personal/AnimeInfoApp_ReactNative/src/screen/component/upcomingAnime.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  FlatList,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  Pressable,\r\n} from \"react-native\";\r\nimport { withNavigation } from \"react-navigation\";\r\nimport jiken from \"../../api/jikan\";\r\nimport ResultsDetail from \"./resultDetails\";\r\nimport Loading from \"./loading\";\r\n\r\nconst UpcomingAnime = (props) => {\r\n  const [upcomingAnimeList, setUpcomingAnimeList] = useState();\r\n  const year = new Date().getFullYear();\r\n\r\n  console.log(upcomingAnimeList,\"upcomingAnimeList\")\r\n  const searchResults = async () => {\r\n    try {\r\n    if(upcomingAnimeList){\r\n        setUpcomingAnimeList()\r\n        return\r\n    }\r\n      const response = await jiken.get(\r\n        \"/seasons/\" + year + \"/\" + props.season,\r\n        {}\r\n      );\r\n      await setUpcomingAnimeList([...response.data.data]);\r\n      //console.log(response.data.anime);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setErrorMsg(\"Data Not Found!\");\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Pressable style={ styles.button} onPress={() => searchResults()}>\r\n        {\" \"}\r\n        <Text style={styles.title}>\r\n          Upcoming Anime {year} - {props.season}\r\n        </Text>\r\n      </Pressable>\r\n\r\n      {upcomingAnimeList? (\r\n        <FlatList\r\n          horizontal\r\n          showsHorizontalScrollIndicator={false}\r\n          data={upcomingAnimeList}\r\n          keyExtractor={(r) => r.mal_id}\r\n          //key={1}\r\n          renderItem={({ item }) => {\r\n            return (\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  props.navigation.navigate(\"Details\", {\r\n                    id: item.mal_id,\r\n                    type: \"anime\",\r\n                  })\r\n                }\r\n              >\r\n                <ResultsDetail result={item} />\r\n              </TouchableOpacity>\r\n            );\r\n          }}\r\n        />\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  title: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    marginLeft: 15,\r\n    marginBottom: 5,\r\n    textTransform: \"capitalize\",\r\n  },\r\n  container: {\r\n    marginTop: 5,\r\n    //marginBottom:15,\r\n    borderBottomColor: \"black\",\r\n    paddingBottom: 10,\r\n    borderBottomWidth: 3,\r\n  },\r\n  data: {\r\n    marginLeft: 15,\r\n    marginRight: 15,\r\n    marginTop: 10,\r\n    width: Dimensions.get(\"window\").width / 3 - 35,\r\n  },\r\n  image: {\r\n    // width: Dimensions.get('window').width-30,\r\n    width: 100,\r\n    height: 170,\r\n    borderRadius: 4,\r\n    marginBottom: 6,\r\n  },\r\n  name: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 14,\r\n    marginBottom: 5,\r\n  },\r\n  button: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 2,\r\n    marginLeft: 5,\r\n    marginRight: 5,\r\n    backgroundColor: \"white\",\r\n    borderWidth: 2,\r\n    paddingTop:3\r\n    \r\n  },\r\n});\r\n\r\n//export default withNavigation(TopAnime);\r\n\r\nexport default withNavigation(UpcomingAnime);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}