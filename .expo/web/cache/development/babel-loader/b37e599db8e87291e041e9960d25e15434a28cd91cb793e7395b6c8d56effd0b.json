{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\azahi\\\\Desktop\\\\Work\\\\Personal\\\\AnimeInfoApp_ReactNative\\\\src\\\\screen\\\\component\\\\upcomingAnime.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { withNavigation } from 'react-navigation';\nimport jiken from \"../../api/jikan\";\nimport ResultsDetail from \"./resultDetails\";\nimport Loading from \"./loading\";\nvar UpcomingAnime = function UpcomingAnime(props) {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    upcomingAnimeList = _useState2[0],\n    setUpcomingAnimeList = _useState2[1];\n  var year = new Date().getFullYear();\n  var searchResults = function searchResults() {\n    return _regeneratorRuntime.async(function searchResults$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              setUpcomingAnimeList(response.data.anime);\n            } catch (err) {\n              console.log(err);\n              setErrorMsg('Data Not Found!');\n            }\n            ;\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  useEffect(function () {\n    searchResults();\n  }, []);\n  useEffect(function () {\n    if (upcomingAnimeList == [] || upcomingAnimeList == '') {\n      console.log('upcomingAnimeList check ', upcomingAnimeList);\n      searchResults();\n    }\n  }, [upcomingAnimeList]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Upcoming Anime \", year, \"(\", props.season, \")\"), upcomingAnimeList == [] || upcomingAnimeList != '' ? React.createElement(FlatList, {\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    data: upcomingAnimeList,\n    keyExtractor: function keyExtractor(r) {\n      return r.mal_id;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate('Details', {\n            id: item.mal_id,\n            type: 'anime'\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }\n      }, React.createElement(ResultsDetail, {\n        result: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }) : React.createElement(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginLeft: 15,\n    marginBottom: 5,\n    textTransform: 'capitalize'\n  },\n  container: {\n    marginTop: 5,\n    borderBottomColor: 'black',\n    paddingBottom: 10,\n    borderBottomWidth: 3\n  },\n  data: {\n    marginLeft: 15,\n    marginRight: 15,\n    marginTop: 10,\n    width: Dimensions.get('window').width / 3 - 35\n  },\n  image: {\n    width: 100,\n    height: 170,\n    borderRadius: 4,\n    marginBottom: 6\n  },\n  name: {\n    fontWeight: 'bold',\n    fontSize: 14,\n    marginBottom: 5\n  }\n});\nexport default withNavigation(UpcomingAnime);","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","FlatList","ScrollView","TouchableOpacity","Dimensions","Button","withNavigation","jiken","ResultsDetail","Loading","UpcomingAnime","props","_useState","_useState2","_slicedToArray","upcomingAnimeList","setUpcomingAnimeList","year","Date","getFullYear","searchResults","_regeneratorRuntime","async","searchResults$","_context","prev","next","response","data","anime","err","console","log","setErrorMsg","stop","Promise","createElement","style","styles","container","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","season","horizontal","showsHorizontalScrollIndicator","keyExtractor","r","mal_id","renderItem","_ref","item","onPress","navigation","navigate","id","type","result","create","fontSize","fontWeight","marginLeft","marginBottom","textTransform","marginTop","borderBottomColor","paddingBottom","borderBottomWidth","marginRight","width","get","image","height","borderRadius","name"],"sources":["C:/Users/azahi/Desktop/Work/Personal/AnimeInfoApp_ReactNative/src/screen/component/upcomingAnime.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport { View, Text, StyleSheet,FlatList,ScrollView,TouchableOpacity,Dimensions, Button  } from 'react-native';\r\nimport {withNavigation} from 'react-navigation'; \r\nimport jiken from '../../api/jikan';\r\nimport ResultsDetail from './resultDetails';\r\nimport Loading  from './loading';\r\n\r\nconst UpcomingAnime = (props) => {\r\n    const [upcomingAnimeList,setUpcomingAnimeList]=useState([]);\r\n    const year = new Date().getFullYear();\r\n\r\n    const searchResults =async()=>{\r\n\r\n        try {\r\n            // const response = await jiken.get('/seasons/'+year+'/'+props.season,{});\r\n            setUpcomingAnimeList(response.data.anime);\r\n            //console.log(response.data.anime);\r\n\r\n        }catch (err){\r\n            console.log(err);\r\n            setErrorMsg('Data Not Found!');\r\n        };\r\n\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        searchResults();\r\n    },[]);\r\n    \r\n\r\n    useEffect(()=>{\r\n        if(upcomingAnimeList==[] || upcomingAnimeList==''){\r\n            console.log('upcomingAnimeList check ' ,upcomingAnimeList);\r\n            searchResults();\r\n        }\r\n    },[upcomingAnimeList]);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <Text style={styles.title}>Upcoming Anime {year}({props.season})</Text>\r\n                \r\n                {upcomingAnimeList==[] ||upcomingAnimeList!=''?\r\n                <FlatList\r\n                    horizontal\r\n                    showsHorizontalScrollIndicator={false}\r\n                    data={upcomingAnimeList}\r\n                    keyExtractor={(r) =>r.mal_id}\r\n                    //key={1}\r\n                    renderItem={({item}) =>{\r\n                        return (\r\n                            <TouchableOpacity onPress={()=>props.navigation.navigate('Details',{id : item.mal_id,type:'anime'})}>\r\n                                <ResultsDetail result={item}/>\r\n                            </TouchableOpacity>\r\n                        )\r\n                    }}\r\n                />: <Loading/>}\r\n            </View>\r\n            );\r\n        };\r\n\r\nconst styles = StyleSheet.create({\r\n    title:{\r\n        fontSize:18,\r\n        fontWeight:'bold',\r\n        marginLeft:15,\r\n        marginBottom:5,\r\n        textTransform: 'capitalize'\r\n    },\r\n    container:{\r\n        marginTop:5,\r\n        //marginBottom:15,\r\n        borderBottomColor:'black',\r\n        paddingBottom:10,\r\n        borderBottomWidth:3,\r\n    },\r\n    data:{\r\n        marginLeft:15,\r\n        marginRight:15,\r\n        marginTop:10,\r\n        width:(Dimensions.get('window').width/3)-35\r\n\r\n    },\r\n    image:{\r\n        // width: Dimensions.get('window').width-30,\r\n        width:100,\r\n        height:170,\r\n        borderRadius:4,\r\n        marginBottom:6\r\n    },\r\n    name:{\r\n        fontWeight:'bold',\r\n        fontSize:14,\r\n        marginBottom:5\r\n    }\r\n});\r\n\r\n//export default withNavigation(TopAnime);\r\n\r\nexport default withNavigation(UpcomingAnime);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}