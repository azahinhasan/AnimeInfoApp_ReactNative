{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\azahi\\\\Desktop\\\\Work\\\\Personal\\\\AnimeInfoApp_ReactNative\\\\src\\\\screen\\\\component\\\\searchBar.js\";\nimport React, { useState } from 'react';\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport { Ionicons } from '@expo/vector-icons';\nvar SearchScreen = function SearchScreen(_ref) {\n  var term = _ref.term,\n    onTermChnage = _ref.onTermChnage,\n    onTermSubmit = _ref.onTermSubmit,\n    serachType = _ref.serachType,\n    toAnime = _ref.toAnime,\n    toManga = _ref.toManga;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isPress = _React$useState2[0],\n    setIsPress = _React$useState2[1];\n  console.log(serachType, 'serachType');\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.buttons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, React.createElement(Pressable, {\n    onPress: toAnime.bind(),\n    style: serachType == 'anime' ? styles.btnAMSelected : styles.btnAM,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: serachType == 'anime' ? styles.btnTextSelected : styles.btnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, \"Anime\")), React.createElement(Pressable, {\n    onPress: toManga.bind(),\n    style: serachType == 'manga' ? styles.btnAMSelected : styles.btnAM,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: serachType == 'manga' ? styles.btnTextSelected : styles.btnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, \"Manga\"))));\n};\nvar styles = StyleSheet.create({\n  background: {\n    marginTop: 15,\n    marginBottom: 25,\n    backgroundColor: 'white',\n    borderWidth: 2,\n    height: 50,\n    borderRadius: 30,\n    marginHorizontal: 15,\n    flexDirection: 'row'\n  },\n  inputStyle: {\n    flex: 1,\n    fontSize: 20\n  },\n  searchIcon: {\n    fontSize: 35,\n    alignSelf: 'center',\n    marginLeft: 8,\n    marginRight: 3\n  },\n  buttons: {\n    width: 100,\n    flexDirection: 'row',\n    marginHorizontal: 15\n  },\n  btnAM: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4,\n    elevation: 4,\n    marginLeft: 5,\n    backgroundColor: 'white',\n    borderWidth: 2,\n    height: 30,\n    width: 80\n  },\n  btnAMSelected: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4,\n    elevation: 3,\n    marginLeft: 5,\n    backgroundColor: 'black',\n    height: 30,\n    width: 80\n  },\n  btnText: {\n    color: 'black',\n    fontWeight: 'bold',\n    paddingBottom: 2,\n    fontSize: 15\n  },\n  btnTextSelected: {\n    color: 'white',\n    fontWeight: 'bold',\n    paddingBottom: 2,\n    fontSize: 15\n  },\n  btnPress: {\n    borderColor: 'blue',\n    borderWidth: 1,\n    height: 30,\n    width: 100\n  }\n});\nexport default SearchScreen;","map":{"version":3,"names":["React","useState","TouchableHighlight","View","Text","StyleSheet","TextInput","Pressable","Dimensions","Button","Touchable","Ionicons","SearchScreen","_ref","term","onTermChnage","onTermSubmit","serachType","toAnime","toManga","_React$useState","_React$useState2","_slicedToArray","isPress","setIsPress","console","log","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","buttons","onPress","bind","btnAMSelected","btnAM","btnTextSelected","btnText","create","background","marginTop","marginBottom","backgroundColor","borderWidth","height","borderRadius","marginHorizontal","flexDirection","inputStyle","flex","fontSize","searchIcon","alignSelf","marginLeft","marginRight","width","alignItems","justifyContent","elevation","color","fontWeight","paddingBottom","btnPress","borderColor"],"sources":["C:/Users/azahi/Desktop/Work/Personal/AnimeInfoApp_ReactNative/src/screen/component/searchBar.js"],"sourcesContent":["import React,{useState} from 'react';\r\nimport { TouchableHighlight,View, Text, StyleSheet,TextInput, Pressable ,Dimensions, Button, Touchable} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons'; \r\n\r\n//icon are from https://github.com/expo/vector-icons\r\n\r\nconst SearchScreen = ({term,onTermChnage,onTermSubmit,serachType,toAnime,toManga}) => {\r\n\r\n  \r\n\r\n    // const setSerachTypeHnadler=(v)=>{\r\n    //     setSerachType(v);\r\n    //     console.log(serachType);\r\n    // }\r\n    var [ isPress, setIsPress ] = React.useState(false);\r\n\r\n\r\n    console.log(serachType,'serachType');\r\n\r\n    return (\r\n        <View>\r\n            {/* <View style={styles.background}>\r\n                <Ionicons name=\"search-sharp\" style={styles.searchIcon}color=\"black\" />\r\n                <TextInput \r\n                autoCapitalize=\"none\"\r\n                autoCorrect={false}\r\n                style={styles.inputStyle} \r\n                placeholder=\"Search\"\r\n                value={term}\r\n                onChangeText={onTermChnage}\r\n                onEndEditing={onTermSubmit}\r\n                />\r\n            </View> */}\r\n            <View  style={styles.buttons}> \r\n                <Pressable \r\n                    onPress={toAnime.bind()}\r\n                    style={serachType=='anime'? styles.btnAMSelected:styles.btnAM}>\r\n                        <Text style={serachType=='anime'? styles.btnTextSelected: styles.btnText}>Anime</Text>\r\n                </Pressable>\r\n                <Pressable \r\n                    onPress={toManga.bind()}\r\n                    style={serachType=='manga'? styles.btnAMSelected:styles.btnAM}>\r\n                        <Text style={serachType=='manga'? styles.btnTextSelected: styles.btnText}>Manga</Text>\r\n                </Pressable>\r\n            </View>\r\n\r\n        </View>\r\n);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    background:{\r\n        marginTop:15,\r\n        marginBottom:25,\r\n        backgroundColor:'white',\r\n        borderWidth:2,\r\n        height:50,\r\n        borderRadius:30,\r\n        marginHorizontal:15,\r\n        flexDirection:'row',\r\n    },\r\n    inputStyle:{\r\n        flex:1,\r\n        fontSize:20\r\n    },\r\n    searchIcon:{\r\n        fontSize:35,\r\n        alignSelf:'center',\r\n        marginLeft:8,\r\n        marginRight:3\r\n    },\r\n    buttons:{\r\n        width:100,\r\n        flexDirection:'row',\r\n        marginHorizontal:15,\r\n        \r\n    },\r\n    btnAM:{\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: 4,\r\n        elevation: 4,\r\n        marginLeft:5,\r\n        backgroundColor:'white',\r\n        borderWidth:2,\r\n        height:30,\r\n        width:80\r\n    },\r\n    btnAMSelected:{\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: 4,\r\n        elevation: 3,\r\n        marginLeft:5,\r\n        backgroundColor:'black',\r\n        height:30,\r\n        width:80\r\n    },\r\n    btnText:{\r\n        color:'black',\r\n        fontWeight:'bold',\r\n        paddingBottom:2,\r\n        fontSize:15\r\n    },\r\n    btnTextSelected:{\r\n        color:'white',\r\n        fontWeight:'bold',\r\n        paddingBottom:2,\r\n        fontSize:15\r\n    },\r\n    btnPress:{\r\n        borderColor: 'blue',\r\n        borderWidth: 1,\r\n        height: 30,\r\n        width: 100,\r\n    }\r\n});\r\n\r\nexport default SearchScreen;\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}